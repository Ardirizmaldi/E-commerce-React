{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ardi/Documents/React-Project/graphql/E-commerce-React/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/ardi/Documents/React-Project/graphql/E-commerce-React/client/src/components/collections-overview/collections-overview.container.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    collection {\\n      id\\n      title\\n      items {\\n        id\\n        name\\n        price\\n        imageUrl\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport CollectionsOverview from \"./collections-overview.component\";\nimport Spinner from \"../spinner/spinner.component\";\nconst GET_COLLECTIONS = gql(_templateObject());\n\nconst CollectionsOverviewContainer = () => React.createElement(Query, {\n  query: GET_COLLECTIONS,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n  return React.createElement(CollectionsOverview, {\n    collections: data.collections,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n});\n\nexport default CollectionsOverviewContainer;","map":{"version":3,"sources":["/home/ardi/Documents/React-Project/graphql/E-commerce-React/client/src/components/collections-overview/collections-overview.container.jsx"],"names":["React","Query","gql","CollectionsOverview","Spinner","GET_COLLECTIONS","CollectionsOverviewContainer","loading","error","data","collections"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,MAAMC,eAAe,GAAGH,GAAH,mBAArB;;AAeA,MAAMI,4BAA4B,GAAG,MACnC,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAED,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEE,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAC7B,MAAIF,OAAJ,EAAa,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,SAAO,oBAAC,mBAAD;AAAqB,IAAA,WAAW,EAAEE,IAAI,CAACC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAJH,CADF;;AASA,eAAeJ,4BAAf","sourcesContent":["import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport CollectionsOverview from \"./collections-overview.component\";\nimport Spinner from \"../spinner/spinner.component\";\n\nconst GET_COLLECTIONS = gql`\n  {\n    collection {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionsOverviewContainer = () => (\n  <Query query={GET_COLLECTIONS}>\n    {({ loading, error, data }) => {\n      if (loading) return <Spinner />;\n      return <CollectionsOverview collections={data.collections} />;\n    }}\n  </Query>\n);\n\nexport default CollectionsOverviewContainer;\n"]},"metadata":{},"sourceType":"module"}