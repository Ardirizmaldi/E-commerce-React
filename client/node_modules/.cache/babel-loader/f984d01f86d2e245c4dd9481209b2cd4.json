{"ast":null,"code":"import * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBO6ujuJDMY88ImeDS7yZxCF2iXD4pGS8s\",\n  authDomain: \"ecommerce-db-aa949.firebaseapp.com\",\n  databaseURL: \"https://ecommerce-db-aa949.firebaseio.com\",\n  projectId: \"ecommerce-db-aa949\",\n  storageBucket: \"\",\n  messagingSenderId: \"562117182090\",\n  appId: \"1:562117182090:web:71053b3cab19ff025a2373\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n  console.log(snapShot); // if(!snapShot.exists) {\n  //     const {displayName, email} = userAuth;\n  //     const createAt = new Date();\n  //     try {\n  //         await userRef.set({\n  //             displayName,\n  //             email,\n  //             createAt,\n  //             ...additionalData\n  //         })\n  //     } catch (error) {\n  //         console.log('Error creating user', error.message);\n  //     }\n  // }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  propt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/ardi/Documents/React-Project/e-commerce/src/components/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","propt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B;AAEA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,oCAFD;AAGXC,EAAAA,WAAW,EAAE,2CAHF;AAIXC,EAAAA,SAAS,EAAE,oBAJA;AAKXC,EAAAA,aAAa,EAAE,EALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AACxE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AAEA,QAAMC,QAAQ,GAAI,MAAMJ,OAAO,CAACK,GAAR,EAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EANwE,CAQxE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOJ,OAAP;AACH,CAzBM;AA2BPZ,QAAQ,CAACoB,aAAT,CAAuBnB,MAAvB;AACA,OAAO,MAAMoB,IAAI,GAAGrB,QAAQ,CAACqB,IAAT,EAAb;AACP,OAAO,MAAMR,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMS,QAAQ,GAAG,IAAItB,QAAQ,CAACqB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAetB,QAAf","sourcesContent":["import * as firebase from 'firebase/app';\n\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBO6ujuJDMY88ImeDS7yZxCF2iXD4pGS8s\",\n    authDomain: \"ecommerce-db-aa949.firebaseapp.com\",\n    databaseURL: \"https://ecommerce-db-aa949.firebaseio.com\",\n    projectId: \"ecommerce-db-aa949\",\n    storageBucket: \"\",\n    messagingSenderId: \"562117182090\",\n    appId: \"1:562117182090:web:71053b3cab19ff025a2373\"\n};\n\nexport const createUserProfileDocument = async(userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot =  await userRef.get();\n    console.log(snapShot);\n\n    // if(!snapShot.exists) {\n    //     const {displayName, email} = userAuth;\n    //     const createAt = new Date();\n\n    //     try {\n    //         await userRef.set({\n    //             displayName,\n    //             email,\n    //             createAt,\n    //             ...additionalData\n    //         })\n    //     } catch (error) {\n    //         console.log('Error creating user', error.message);\n    //     }\n    // }\n\n    return userRef;\n}\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ propt: 'select_account' });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}