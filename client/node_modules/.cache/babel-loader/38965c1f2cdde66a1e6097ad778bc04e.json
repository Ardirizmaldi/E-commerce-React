{"ast":null,"code":"import _defineProperty from \"/home/ardi/Documents/React-Project/e-commerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItems => cartItems.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItems => cartItems.id === cartItemToAdd.id ? _objectSpread({}, cartItems, {\n      quantity: cartItems.quantity + 1\n    }) : cartItems);\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};","map":{"version":3,"sources":["/home/ardi/Documents/React-Project/e-commerce/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","id","map","quantity"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBH,SAAS,IAAIA,SAAS,CAACI,EAAV,KAAiBH,aAAa,CAACG,EADrB,CAAzB;;AAIA,MAAIF,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACK,GAAV,CAAcL,SAAS,IAC5BA,SAAS,CAACI,EAAV,KAAiBH,aAAa,CAACG,EAA/B,qBACSJ,SADT;AACoBM,MAAAA,QAAQ,EAAEN,SAAS,CAACM,QAAV,GAAqB;AADnD,SAEIN,SAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGA,SAAJ,oBAAoBC,aAApB;AAAmCK,IAAAA,QAAQ,EAAE;AAA7C,KAAP;AACD,CAdM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(\n    cartItems => cartItems.id === cartItemToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map(cartItems =>\n      cartItems.id === cartItemToAdd.id\n        ? { ...cartItems, quantity: cartItems.quantity + 1 }\n        : cartItems\n    );\n  }\n\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n"]},"metadata":{},"sourceType":"module"}