{"ast":null,"code":"import ShopActionType from \"./shop.types\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../components/firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionType.FETCH_COLLECTION_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionType.FETCH_COLLECTION_SUCCES,\n  payload: collectionsMap\n});\nexport const fetchCollectionsStartAsnyc = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch;\n  };\n};","map":{"version":3,"sources":["/home/ardi/Documents/React-Project/e-commerce/src/pages/shop/shop.action.js"],"names":["ShopActionType","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTION_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTION_SUCCES","payload","fetchCollectionsStartAsnyc","dispatch","collectionRef","collection","get","then","snapshot","catch"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,cAA3B;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,0CAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,cAAc,CAACK;AADqB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACxDH,EAAAA,IAAI,EAAEJ,cAAc,CAACQ,uBADmC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMG,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AAEAS,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMT,cAAc,GAAGL,8BAA8B,CAACc,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACL,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KAHD,EAGGU,KAHH;AAID,GARD;AASD,CAVM","sourcesContent":["import ShopActionType from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionSnapshotToMap\n} from \"../../components/firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionType.FETCH_COLLECTION_START\n});\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionType.FETCH_COLLECTION_SUCCES,\n  payload: collectionsMap\n});\n\nexport const fetchCollectionsStartAsnyc = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch;\n  };\n};\n"]},"metadata":{},"sourceType":"module"}