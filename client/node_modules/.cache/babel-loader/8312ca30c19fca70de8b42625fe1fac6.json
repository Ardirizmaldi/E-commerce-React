{"ast":null,"code":"import _defineProperty from \"/home/ardi/Documents/React-Project/e-commerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyBO6ujuJDMY88ImeDS7yZxCF2iXD4pGS8s\",\n  authDomain: \"ecommerce-db-aa949.firebaseapp.com\",\n  databaseURL: \"https://ecommerce-db-aa949.firebaseio.com\",\n  projectId: \"ecommerce-db-aa949\",\n  storageBucket: \"\",\n  messagingSenderId: \"562117182090\",\n  appId: \"1:562117182090:web:71053b3cab19ff025a2373\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createAt\n      }, additionalData));\n    } catch (error) {\n      console.log(\"Error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionSnapshotToMap = collections => {\n  const transformCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  transformCollection.reduce((accumulator, collection) => {});\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  propt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/ardi/Documents/React-Project/e-commerce/src/components/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","exists","displayName","email","createAt","Date","set","error","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionSnapshotToMap","collections","transformCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","propt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase/app\";\n\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBO6ujuJDMY88ImeDS7yZxCF2iXD4pGS8s\",\n  authDomain: \"ecommerce-db-aa949.firebaseapp.com\",\n  databaseURL: \"https://ecommerce-db-aa949.firebaseio.com\",\n  projectId: \"ecommerce-db-aa949\",\n  storageBucket: \"\",\n  messagingSenderId: \"562117182090\",\n  appId: \"1:562117182090:web:71053b3cab19ff025a2373\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error creating user\", error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n    const batch = firestore.batch();\n    objectsToAdd.forEach(obj => {\n      const newDocRef = collectionRef.doc();\n      batch.set(newDocRef, obj);\n    });\n\n    return await batch.commit();\n};\n\nexport const convertCollectionSnapshotToMap = (collections) => {\n  const transformCollection = collections.docs.map(doc => {\n    const {title, items} = doc.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    }\n  });\n\n  transformCollection.reduce((accumulator, collection) => {})\n}\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ propt: \"select_account\" });\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}