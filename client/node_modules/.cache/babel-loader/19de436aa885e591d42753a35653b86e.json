{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ardi/Documents/React-Project/e-commerce/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/ardi/Documents/React-Project/e-commerce/client/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nbody {\\n  font-family: 'Open Sans Condensed';\\n  padding: 20px 60px;\\n  background-color: \", \";\\n  \", \"\\n\\n  @media screen and (max-width: 800px) {\\n    padding: 10px;\\n  }\\n}\\n\\na {\\n  text-decoration: none;\\n  color: \", \";\\n  \", \"\\n}\\n\\n* {\\n  box-sizing: border-box;\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, lazy, Suspense } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Header from \"./components/header/header.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"./redux/user/user.selector\";\nimport { checkUserSession } from \"./redux/user/user.action\"; // import { GlobalStyle } from \"./global.styles\";\n\nimport Spinner from \"./components/spinner/spinner.component\";\nimport ErrorBoundary from \"./components/error-boundary/error-boundary.component\";\nimport { useTheme } from \"./components/toggle/toggle.component\";\nimport { createGlobalStyle } from \"styled-components\";\nconst HomePage = lazy(() => import(\"./pages/homepage/homepage.component\"));\nconst ShopPage = lazy(() => import(\"./pages/shop/shop.component\"));\nconst SingInAndSignUpPage = lazy(() => import(\"./pages/signIn-and-signUp/signIn-and-signUp.component\"));\nconst CheckoutPage = lazy(() => import(\"./pages/checkout/checkout.component\"));\nconst GlobalStyle = createGlobalStyle(_templateObject(), props => props.theme, ''\n/* background-color: black; */\n, props => props.theme.body, ''\n/* color: white; */\n);\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n  const themeState = useTheme();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(GlobalStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(ErrorBoundary, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => themeState.toggle(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, themeState.dark ? \"Switch to light mode\" : \"switch to dark mode\"), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => currentUser ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }) : React.createElement(SingInAndSignUpPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/ardi/Documents/React-Project/e-commerce/client/src/App.js"],"names":["React","useEffect","lazy","Suspense","Switch","Route","Redirect","connect","Header","createStructuredSelector","selectCurrentUser","checkUserSession","Spinner","ErrorBoundary","useTheme","createGlobalStyle","HomePage","ShopPage","SingInAndSignUpPage","CheckoutPage","GlobalStyle","props","theme","body","App","currentUser","themeState","toggle","dark","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, lazy, Suspense } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"./components/header/header.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"./redux/user/user.selector\";\nimport { checkUserSession } from \"./redux/user/user.action\";\n// import { GlobalStyle } from \"./global.styles\";\nimport Spinner from \"./components/spinner/spinner.component\";\nimport ErrorBoundary from \"./components/error-boundary/error-boundary.component\";\nimport { useTheme } from \"./components/toggle/toggle.component\";\n\nimport { createGlobalStyle } from \"styled-components\";\n\nconst HomePage = lazy(() => import(\"./pages/homepage/homepage.component\"));\nconst ShopPage = lazy(() => import(\"./pages/shop/shop.component\"));\nconst SingInAndSignUpPage = lazy(() =>\n  import(\"./pages/signIn-and-signUp/signIn-and-signUp.component\")\n);\nconst CheckoutPage = lazy(() => import(\"./pages/checkout/checkout.component\"));\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  font-family: 'Open Sans Condensed';\n  padding: 20px 60px;\n  background-color: ${props => props.theme};\n  ${'' /* background-color: black; */}\n\n  @media screen and (max-width: 800px) {\n    padding: 10px;\n  }\n}\n\na {\n  text-decoration: none;\n  color: ${props => props.theme.body};\n  ${'' /* color: white; */}\n}\n\n* {\n  box-sizing: border-box;\n}\n`;\n\nconst App = ({ checkUserSession, currentUser }) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n\n  const themeState = useTheme();\n\n  return (\n    <div>\n      <GlobalStyle />\n      <Header />\n      <Switch>\n        <ErrorBoundary>\n          <Suspense fallback={<Spinner />}>\n          <button onClick={() => themeState.toggle()}>\n              {themeState.dark ? \"Switch to light mode\" : \"switch to dark mode\"}\n            </button>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/shop\" component={ShopPage} />\n            <Route exact path=\"/checkout\" component={CheckoutPage} />\n            <Route\n              exact\n              path=\"/signin\"\n              render={() =>\n                currentUser ? <Redirect to=\"/\" /> : <SingInAndSignUpPage />\n              }\n            />\n          </Suspense>\n        </ErrorBoundary>\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}