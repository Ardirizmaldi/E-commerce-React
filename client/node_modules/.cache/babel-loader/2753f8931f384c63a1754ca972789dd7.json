{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport ShopActionType from \"./shop.types\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../components/firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.action\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMa));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // collectionRef\n  //   .get()\n  //   .then(snapshot => {\n  //     const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionType.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/ardi/Documents/React-Project/e-commerce/src/pages/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionType","firestore","convertCollectionSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","collectionsMa","error","message","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,cAAP,MAA2B,cAA3B;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,0CAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,eAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACI,8BAAD,EAAiCQ,QAAjC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAuB,CAACU,aAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMf,GAAG,CAACK,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD,GAVsC,CAYvC;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMnB,SAAS,CAACG,cAAc,CAACiB,sBAAhB,EAAwCZ,qBAAxC,CAAf;AACD","sourcesContent":["import { takeEvery, call, put } from \"redux-saga/effects\";\nimport ShopActionType from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionSnapshotToMap\n} from \"../../components/firebase/firebase.utils\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n} from \"./shop.action\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMa));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n\n  // collectionRef\n  //   .get()\n  //   .then(snapshot => {\n  //     const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionType.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}\n"]},"metadata":{},"sourceType":"module"}