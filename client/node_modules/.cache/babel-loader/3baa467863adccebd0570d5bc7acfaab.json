{"ast":null,"code":"var _jsxFileName = \"/home/ardi/Documents/React-Project/e-commerce/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport \"./cart-dropdown.styes.scss\";\nimport \"./cart-dropdown.styles\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.action\";\nimport { EmptyMessage } from \"./cart-dropdown.styles\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => React.createElement(CartDropdown, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(CartItem, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n})) : React.createElement(EmptyMessage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCartHidden());\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/home/ardi/Documents/React-Project/e-commerce/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","withRouter","CustomButton","CartItem","selectCartItems","createStructuredSelector","toggleCartHidden","EmptyMessage","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,OAAO,4BAAP;AACA,OAAO,wBAAP;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KACnB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAcC,QAAQ,IACpB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADD,GAKC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,CADF,EAUE,oBAAC,YAAD;AACE,EAAA,OAAO,EAAE,MAAM;AACbJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACD,GAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,CADF;;AAsBA,MAAMW,eAAe,GAAGZ,wBAAwB,CAAC;AAC/CI,EAAAA,SAAS,EAAEL;AADoC,CAAD,CAAhD;AAIA,eAAeH,UAAU,CAACD,OAAO,CAACiB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport \"./cart-dropdown.styes.scss\";\nimport \"./cart-dropdown.styles\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { toggleCartHidden } from \"../../redux/cart/cart.action\";\nimport { EmptyMessage } from \"./cart-dropdown.styles\";\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <CartDropdown>\n    <CartItem>\n      {cartItems.length ? (\n        cartItems.map(cartItem => (\n          <CartItem key={cartItem.id} item={cartItem} />\n        ))\n      ) : (\n        <EmptyMessage>Your cart is empty</EmptyMessage>\n      )}\n    </CartItem>\n    <CustomButton\n      onClick={() => {\n        history.push(\"/checkout\");\n        dispatch(toggleCartHidden());\n      }}\n    >\n      GO TO CHECKOUT\n    </CustomButton>\n  </CartDropdown>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}