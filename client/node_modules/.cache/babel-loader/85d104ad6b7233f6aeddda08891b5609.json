{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ardi/Documents/React-Project/graphql/E-commerce-React/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n      \\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    cartHidden @client\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    extend type Item {\\n        quantity: Int\\n    }\\n\\n  extend type Mutation {\\n    ToggleCartHidden: Boolean!\\n    AddItemToCart(item: Item!): [Item]!\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"apollo-boost\";\nexport const typeDefs = gql(_templateObject());\nconst GET_CART_HIDDEN = gql(_templateObject2());\nconst GET_CART_ITEMS = gql(_templateObject3());\nexport const resolvers = {\n  Mutation: {\n    toggleCartHidden: (_root, _args, {\n      cache\n    }) => {\n      const _cache$readQuery = cache.readQuery({\n        query: GET_CART_HIDDEN\n      }),\n            cartHidden = _cache$readQuery.cartHidden;\n\n      cache.writeQuery({\n        query: GET_CART_HIDDEN,\n        data: {\n          cartHidden: !cartHidden\n        }\n      });\n      return !cartHidden;\n    },\n    AddItemToCart: (_root, {\n      item\n    }, {\n      cache\n    }) => {}\n  }\n};","map":{"version":3,"sources":["/home/ardi/Documents/React-Project/graphql/E-commerce-React/client/src/graphql/resolvers.js"],"names":["gql","typeDefs","GET_CART_HIDDEN","GET_CART_ITEMS","resolvers","Mutation","toggleCartHidden","_root","_args","cache","readQuery","query","cartHidden","writeQuery","data","AddItemToCart","item"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,OAAO,MAAMC,QAAQ,GAAGD,GAAH,mBAAd;AAWP,MAAME,eAAe,GAAGF,GAAH,oBAArB;AAMA,MAAMG,cAAc,GAAGH,GAAH,oBAApB;AAMA,OAAO,MAAMI,SAAS,GAAG;AACvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,gBAAgB,EAAE,CAACC,KAAD,EAAQC,KAAR,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAA6B;AAAA,+BACtBA,KAAK,CAACC,SAAN,CAAgB;AACrCC,QAAAA,KAAK,EAAET;AAD8B,OAAhB,CADsB;AAAA,YACrCU,UADqC,oBACrCA,UADqC;;AAK7CH,MAAAA,KAAK,CAACI,UAAN,CAAiB;AACfF,QAAAA,KAAK,EAAET,eADQ;AAEfY,QAAAA,IAAI,EAAE;AAAEF,UAAAA,UAAU,EAAE,CAACA;AAAf;AAFS,OAAjB;AAKA,aAAO,CAACA,UAAR;AACD,KAZO;AAcRG,IAAAA,aAAa,EAAE,CAACR,KAAD,EAAQ;AAACS,MAAAA;AAAD,KAAR,EAAgB;AAACP,MAAAA;AAAD,KAAhB,KAA4B,CAE1C;AAhBO;AADa,CAAlB","sourcesContent":["import { gql } from \"apollo-boost\";\n\nexport const typeDefs = gql`\n    extend type Item {\n        quantity: Int\n    }\n\n  extend type Mutation {\n    ToggleCartHidden: Boolean!\n    AddItemToCart(item: Item!): [Item]!\n  }\n`;\n\nconst GET_CART_HIDDEN = gql`\n  {\n    cartHidden @client\n  }\n`;\n\nconst GET_CART_ITEMS = gql`\n  {\n      \n  }\n`;\n\nexport const resolvers = {\n  Mutation: {\n    toggleCartHidden: (_root, _args, { cache }) => {\n      const { cartHidden } = cache.readQuery({\n        query: GET_CART_HIDDEN\n      });\n\n      cache.writeQuery({\n        query: GET_CART_HIDDEN,\n        data: { cartHidden: !cartHidden }\n      });\n\n      return !cartHidden;\n    },\n\n    AddItemToCart: (_root, {item}, {cache}) => {\n\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}