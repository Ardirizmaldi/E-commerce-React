{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ardi/Documents/React-Project/graphql/E-commerce-React/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/ardi/Documents/React-Project/graphql/E-commerce-React/client/src/pages/collection/collection.container.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query getCollectionsByTitle($title: String!) {\\n    getCollectionsByTitle(title: $title) {\\n      id\\n      title\\n      items {\\n        id\\n        name\\n        price\\n        imageUrl\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport CollectionPage from \"./collection.component\";\nimport Spinner from \"../../components/spinner/spinner.component\";\nconst GET_COLLECTION_BY_TITLE = gql(_templateObject());\n\nconst CollectionPageContainer = ({\n  match\n}) => React.createElement(Query, {\n  query: GET_COLLECTION_BY_TITLE,\n  variables: {\n    title: match.params.collectionId\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, ({\n  loading,\n  data: {\n    getCollectionsByTitle\n  }\n}) => {\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n  return React.createElement(CollectionPage, {\n    collection: getCollectionsByTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  });\n});\n\nexport default CollectionPageContainer;","map":{"version":3,"sources":["/home/ardi/Documents/React-Project/graphql/E-commerce-React/client/src/pages/collection/collection.container.jsx"],"names":["React","Query","gql","CollectionPage","Spinner","GET_COLLECTION_BY_TITLE","CollectionPageContainer","match","title","params","collectionId","loading","data","getCollectionsByTitle"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,OAAP,MAAoB,4CAApB;AAEA,MAAMC,uBAAuB,GAAGH,GAAH,mBAA7B;;AAeA,MAAMI,uBAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAC9B,oBAAC,KAAD;AACE,EAAA,KAAK,EAAEF,uBADT;AAEE,EAAA,SAAS,EAAE;AAAEG,IAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;AAAtB,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAIG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAjB,CAAD,KAAkD;AACjD,MAAIF,OAAJ,EAAa,OAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,SAAO,oBAAC,cAAD;AAAgB,IAAA,UAAU,EAAEE,qBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAPH,CADF;;AAYA,eAAeP,uBAAf","sourcesContent":["import React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport CollectionPage from \"./collection.component\";\nimport Spinner from \"../../components/spinner/spinner.component\";\n\nconst GET_COLLECTION_BY_TITLE = gql`\n  query getCollectionsByTitle($title: String!) {\n    getCollectionsByTitle(title: $title) {\n      id\n      title\n      items {\n        id\n        name\n        price\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst CollectionPageContainer = ({ match }) => (\n  <Query\n    query={GET_COLLECTION_BY_TITLE}\n    variables={{ title: match.params.collectionId }}\n  >\n    {({ loading, data: { getCollectionsByTitle } }) => {\n      if (loading) return <Spinner />;\n      return <CollectionPage collection={getCollectionsByTitle} />;\n    }}\n  </Query>\n);\n\nexport default CollectionPageContainer;\n"]},"metadata":{},"sourceType":"module"}