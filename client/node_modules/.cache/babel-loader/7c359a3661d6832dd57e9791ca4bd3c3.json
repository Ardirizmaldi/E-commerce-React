{"ast":null,"code":"var _jsxFileName = \"/home/ardi/Documents/React-Project/e-commerce/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../components/firebase/firebase.utils\";\nimport { updateCollections } from \"./shop.action\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection(\"collections\"); // fetch(\n    //   \"https://firestore.googleapis.com/v1/projects/ecommerce-db-aa949/databases/(default)/documents/collections\"\n    // )\n    //   .then(response => response.json())\n    //   .then(collectios => console.log(collectios));\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/ardi/Documents/React-Project/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","collectionRef","collection","render","match","loading","state","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,0CAHP;AAIA,SAASC,iBAAT,QAAkC,eAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAErCC,EAAAA,iBAAiB,GAAG;AAAA,UACVN,iBADU,GACY,KAAKO,KADjB,CACVP,iBADU;AAElB,UAAMQ,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB,CAFkB,CAIlB;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKJ,KADhB,CACCI,KADD;AAAA,UAECC,OAFD,GAEa,KAAKC,KAFlB,CAECD,OAFD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKD,KAAK,CAACG,IAAX,CAFN;AAGE,MAAA,MAAM,EAAEP,KAAK,IACX,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEK;AAA3C,SAAwDL,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKI,KAAK,CAACG,IAAX,mBADN;AAEE,MAAA,MAAM,EAAEP,KAAK,IACX,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEK;AAAtC,SAAmDL,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AAjCoC;;AAoCvC,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,iBAAiB,EAAEiB,cAAc,IAC/BD,QAAQ,CAAChB,iBAAiB,CAACiB,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAKA,eAAetB,OAAO,CACpB,IADoB,EAEpBoB,kBAFoB,CAAP,CAGbX,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport {\n  firestore,\n  convertCollectionSnapshotToMap\n} from \"../../components/firebase/firebase.utils\";\nimport { updateCollections } from \"./shop.action\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n\n    // fetch(\n    //   \"https://firestore.googleapis.com/v1/projects/ecommerce-db-aa949/databases/(default)/documents/collections\"\n    // )\n    //   .then(response => response.json())\n    //   .then(collectios => console.log(collectios));\n  }\n\n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => (\n            <CollectionsOverviewWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionPageWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap =>\n    dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}