{"ast":null,"code":"var _jsxFileName = \"/home/ardi/Documents/React-Project/e-commerce/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { fetchCollectionsStartAsnyc } from \"./shop.action\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selector\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {// fetch(\n    //   \"https://firestore.googleapis.com/v1/projects/ecommerce-db-aa949/databases/(default)/documents/collections\"\n    // )\n    //   .then(response => response.json())\n    //   .then(collectios => console.log(collectios));\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsnyc: () => dispatch(fetchCollectionsStartAsnyc())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/ardi/Documents/React-Project/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","fetchCollectionsStartAsnyc","WithSpinner","createStructuredSelector","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","render","props","match","isCollectionFetching","path","loading","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,0BAAT,QAA2C,eAA3C;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACH,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGJ,WAAW,CAACF,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAErCC,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACiC,KAAKC,KADtC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,oBADR,eACQA,oBADR;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFN;AAGE,MAAA,MAAM,EAAEH,KAAK,IACX,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEE;AAA3C,SAAqEF,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKC,KAAK,CAACE,IAAX,mBADN;AAEE,MAAA,MAAM,EAAEH,KAAK,IACX,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEI;AAAtC,SAAmDJ,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AA7BoC;;AAgCvC,MAAMK,eAAe,GAAGb,wBAAwB,CAAC;AAC/CU,EAAAA,oBAAoB,EAAET;AADyB,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CACpBkB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbV,QAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { fetchCollectionsStartAsnyc } from \"./shop.action\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selector\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n  componentDidMount() {\n    // fetch(\n    //   \"https://firestore.googleapis.com/v1/projects/ecommerce-db-aa949/databases/(default)/documents/collections\"\n    // )\n    //   .then(response => response.json())\n    //   .then(collectios => console.log(collectios));\n  }\n\n  render() {\n    const { match, isCollectionFetching } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => (\n            <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionPageWithSpinner isLoading={loading} {...props} />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsnyc: () => dispatch(fetchCollectionsStartAsnyc())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}